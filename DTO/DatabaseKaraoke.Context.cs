//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseKaraoke : DbContext
    {
        System.Data.Entity.SqlServer.SqlProviderServices instance = System.Data.Entity.SqlServer.SqlProviderServices.Instance;
        public DatabaseKaraoke()
            : base("name=DatabaseKaraoke")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblDichVu> tblDichVus { get; set; }
        public virtual DbSet<tblGoiDichVu> tblGoiDichVus { get; set; }
        public virtual DbSet<tblGoiMatHang> tblGoiMatHangs { get; set; }
        public virtual DbSet<tblHoaDonBan> tblHoaDonBans { get; set; }
        public virtual DbSet<tblKhachHang> tblKhachHangs { get; set; }
        public virtual DbSet<tblLoaiDichVu> tblLoaiDichVus { get; set; }
        public virtual DbSet<tblLoaiHang> tblLoaiHangs { get; set; }
        public virtual DbSet<tblLoaiPhong> tblLoaiPhongs { get; set; }
        public virtual DbSet<tblMatHang> tblMatHangs { get; set; }
        public virtual DbSet<tblNguoiDung> tblNguoiDungs { get; set; }
        public virtual DbSet<tblNhanVien> tblNhanViens { get; set; }
        public virtual DbSet<tblPhongDat> tblPhongDats { get; set; }
        public virtual DbSet<tblPhongHat> tblPhongHats { get; set; }
    
        public virtual int sp_UpdateOrderItemQuantity(string maPhongDat, string maMatHang, Nullable<int> soLuongMoi)
        {
            var maPhongDatParameter = maPhongDat != null ?
                new ObjectParameter("MaPhongDat", maPhongDat) :
                new ObjectParameter("MaPhongDat", typeof(string));
    
            var maMatHangParameter = maMatHang != null ?
                new ObjectParameter("MaMatHang", maMatHang) :
                new ObjectParameter("MaMatHang", typeof(string));
    
            var soLuongMoiParameter = soLuongMoi.HasValue ?
                new ObjectParameter("SoLuongMoi", soLuongMoi) :
                new ObjectParameter("SoLuongMoi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateOrderItemQuantity", maPhongDatParameter, maMatHangParameter, soLuongMoiParameter);
        }
    }
}
